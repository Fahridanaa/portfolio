---
import { Image } from "astro:assets";
import ProjectButton from "@/components/ui/ProjectButton.astro";
import type { ImageMetadata } from "astro";
import { AppWindow, Code, CircleEllipsis } from "lucide-react";
import TechStackIcon from "@/components/ui/TechStackIcon.astro";
import { slugify } from "@/utils/helpers";

interface Props {
	title: string;
	description: string;
	type: string;
	image: ImageMetadata;
	imageAlt: string;
	livePreviewUrl?: string;
	githubUrl?: string;
	isReverse?: boolean;
	techStack?: string[];
}

const {
	title,
	description,
	type,
	image,
	imageAlt,
	livePreviewUrl,
	githubUrl,
	isReverse = false,
	techStack = [],
} = Astro.props;
---

<div
	class=`relative flex flex-col gap-8 my-8 lg:my-14 items-center ${isReverse ? 'lg:flex-row-reverse' : 'lg:flex-row'}`>
	<div style="opacity: 1; transform: none; will-change: auto;">
		<div
			class="flex gap-2 relative group rounded-xl overflow-hidden duration-500 hover:scale-[0.97]">
			<span>
				<Image
					src={image}
					alt={imageAlt}
					width={1600}
					height={800}
					class="lg:w-[500px] xl:w-[600px] rounded-xl group-hover:blur-sm duration-500 group-hover:scale-[1.1]"
				/>
			</span>
			<div
				class="transition-all absolute flex flex-wrap w-full h-full justify-center items-center content-center gap-2 opacity-0 group-hover:opacity-100 group-hover:dark:bg-[#f5f5f570] group-hover:bg-[#17171770] duration-500 rounded-xl">
				{techStack.map((tech) => <TechStackIcon iconName={tech} />)}
				{
					githubUrl && (
						<ProjectButton
							href={githubUrl}
							icon={Code}
							text="Client"
						/>
					)
				}
			</div>
		</div>
	</div>
	<div
		class=`flex flex-col items-center gap-4 ${isReverse ? 'lg:items-end' : 'lg:items-start'}`>
		<div
			class=`flex flex-col items-center ${isReverse ? 'lg:items-end' : 'lg:items-start'}`
			style="opacity: 1; will-change: auto;">
			<h2 class="text-2xl font-semibold">{title}</h2>
			<p class="text-xl font-semibold text-[#594C40]">
				{type}
			</p>
		</div>

		<p
			class=`transition-all lg:w-[280px] xl:w-[350px] text-center ${isReverse ? 'lg:text-end' : 'lg:text-start'}`
			style="opacity: 1; will-change: auto;">
			{description}
		</p>

		<div class="flex flex-col gap-2">
			{
				livePreviewUrl && (
					<ProjectButton
						href={livePreviewUrl}
						icon={AppWindow}
						text="Live Preview"
					/>
				)
			}

			<ProjectButton
				href={`/projects/${slugify(title)}`}
				text="See More"
				isNewTab={false}
			/>
		</div>
	</div>
</div>
